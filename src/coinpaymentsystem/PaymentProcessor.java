package coinpaymentsystem;

import java.util.*;

public class PaymentProcessor {

    private final CashRegister cashRegister;

    public PaymentProcessor(CashRegister cashRegister) {
        this.cashRegister = cashRegister;
    }

    public void processPayment(double price, Map<Coin, Integer> paymentCoins) {
        double paidAmount = paymentCoins.entrySet().stream()
                .mapToDouble(e -> e.getKey().getValue() * e.getValue())
                .sum();

        System.out.printf("Ã–deme: %.2f TL | Fiyat: %.2f TL\n", paidAmount, price);

        if (paidAmount < price) {
            System.out.println("Yetersiz Ã¶deme! LÃ¼tfen daha fazla para verin.");
            return;
        }

        double changeAmount = Math.round((paidAmount - price) * 100.0) / 100.0;

        // ğŸ”¹ 1. Ã–nce geÃ§ici olarak Ã¶deme kasaya eklenir
        cashRegister.addCoins(paymentCoins);

        // ğŸ”¹ 2. Bu yeni durumda para Ã¼stÃ¼ verilebiliyor mu kontrol edilir
        Map<Coin, Integer> change = cashRegister.calculateChange(changeAmount);

        if (changeAmount > 0 && change.isEmpty()) {
            // ğŸ”¸ 3. Yeni durumda da para Ã¼stÃ¼ verilemiyorsa â†’ Ã¶deme iptal
            System.out.println("Para Ã¼stÃ¼ verilemiyor! Ã–deme iptal edildi.");

            // ğŸ”¸ Tavsiye mesajÄ±
            Optional<String> suggestion = cashRegister.suggestAlternative(changeAmount);
            suggestion.ifPresent(System.out::println);

            // ğŸ”¸ 4. Ã–deme kasadan geri alÄ±nÄ±r
            for (Map.Entry<Coin, Integer> entry : paymentCoins.entrySet()) {
                Coin coin = entry.getKey();
                int currentCount = cashRegister.getCoinInventory().get(coin);
                cashRegister.getCoinInventory().put(coin, currentCount - entry.getValue());
            }

            return;
        }

        // ğŸ”¹ 4. Ã–deme geÃ§erli, para Ã¼stÃ¼ varsa verilir
        if (changeAmount == 0) {
            System.out.println("Tam Ã¶deme alÄ±ndÄ±, para Ã¼stÃ¼ yok.");
        } else {
            System.out.println("Para Ã¼stÃ¼:");
            for (Map.Entry<Coin, Integer> entry : change.entrySet()) {
                System.out.printf("- %s: %d adet\n", entry.getKey().name(), entry.getValue());
            }

            cashRegister.giveChange(change);
        }

        // ğŸ”¹ 5. Kasa durumu yazdÄ±rÄ±lÄ±r
        cashRegister.printInventory();
    }

}
